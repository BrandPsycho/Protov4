@using Protov4.DTO;
@model List<CarritoFullDTO>

@{
    ViewData["Title"] = "Home Page";
}
<div class="carr">
    <p class="Titulo1"> Tienes @Model.Count articulos en tu carrito</p>

    <table class="TabCarrito">
        <tr>
            <th>Producto</th>
            <th>Descripción</th>
            <th>Precio</th>
            <th>Cantidad</th>
            <th>Subtotal</th>
            <th></th>
        </tr>

        @foreach (var carr in Model)
        {
            int cantidad = 1;

            byte[] imagenBytes = carr.Imagen;
            string base64 = "data:image/png;base64," + Convert.ToBase64String(imagenBytes);
            <tr>
                <td class="ColImag"><img src="@base64" width="200" height="200"></td>
                <td class="ColImag"> @carr.Nombre_Producto </td>
                <td class="ColPrec">$ @carr.Precio </td>
                <td class="ColCant">
                    <div class="contador-container">
                        <div class="contador-content">
                            <button class="btn bi bi-dash-lg btnmenoscarrito"></button>
                            <h4 class="contadorcarrito">@cantidad</h4>
                            <button class="btn bi bi-plus-lg btnmascarrito"></button>
                        </div>
                    </div>
                </td>
                <td class="ColSubT">$ @carr.subtotal_producto </td>

                <td class="ColElim">
                    <form class="deleteForm" action="@Url.Action("Delete", "Carrito")" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id_pedido" value=3 />
                        <input type="hidden" name="id_producto" value="@carr.id_producto" />
                        <button class="btn btn-danger shadow-sm deleteButton" type="submit">
                            <i class="bi bi-trash3"></i>
                        </button>
                    </form>
                </td>
            </tr>
        }
    </table>
    <div class="divcenter">
        <div class="total">
            <h1>Total Carrito</h1>
            @{
                decimal total = 0;
                @foreach (var item in Model)
                {
                    total = total + item.subtotal_producto;
                }
                <h3>
                    $ @total
                </h3>
            }
        </div>
    </div>
</div>

<div>
    <button class="BtnFinCompra btn btn-outline-light" onclick="window.location.href='@Url.Action("Producto", "Producto", new { tipo = "" })'">Añadir Producto</button>
    <button class="BtnFinCompra btn btn-outline-light" onclick="window.location.href='@Url.Action("FinalizarCompra", "Carrito")'">Finalizar compra</button>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var deleteForms = document.querySelectorAll(".deleteForm");
        deleteForms.forEach(function (form) {
            form.addEventListener("submit", function (e) {
                e.preventDefault();

                var formData = new FormData(form);

                fetch(form.action, {
                    method: "POST",
                    body: formData
                })
                    .then(function (response) {
                        if (response.ok) {
                            location.reload();
                        } else {
                            // Handle error if needed
                        }
                    })
                    .catch(function (error) {
                        // Handle network errors or other issues
                    });
            });
        });

        var btnMenosCarrito = document.querySelectorAll(".btnmenoscarrito");
        btnMenosCarrito.forEach(function (btn) {
            btn.addEventListener("click", function () {
                var divProducto = btn.closest(".ColCant");
                var cantidadElement = divProducto.querySelector(".contadorcarrito");
                var cantidad = parseInt(cantidadElement.textContent);
                if (cantidad > 1) {
                    cantidad--;
                    cantidadElement.textContent = cantidad;
                    actualizarSubtotalYTotal(divProducto, cantidad);
                }
            });
        });

        var btnMasCarrito = document.querySelectorAll(".btnmascarrito");
        btnMasCarrito.forEach(function (btn) {
            btn.addEventListener("click", function () {
                var divProducto = btn.closest(".ColCant");
                var cantidadElement = divProducto.querySelector(".contadorcarrito");
                var cantidad = parseInt(cantidadElement.textContent);
                cantidad++;
                cantidadElement.textContent = cantidad;
                actualizarSubtotalYTotal(divProducto, cantidad);
            });
        });

        function actualizarSubtotalYTotal(divProducto, cantidad) {
            var precio = parseFloat(divProducto.closest("tr").querySelector(".ColPrec").textContent.replace("$", ""));
            var subtotal = cantidad * precio;
            divProducto.closest("tr").querySelector(".ColSubT").textContent = "$ " + subtotal.toFixed(2);

            var total = 0;
            document.querySelectorAll(".ColSubT").forEach(function (subTotalElement) {
                total += parseFloat(subTotalElement.textContent.replace("$", ""));
            });
            document.querySelector(".total h3").textContent = "$ " + total.toFixed(2);
        }
    });
</script>
