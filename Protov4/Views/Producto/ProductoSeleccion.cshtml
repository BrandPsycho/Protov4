@using Protov4.DTO
@{
    ViewData["Title"] = "Producto Page";

}
@model List<ProductoDTO>

<div class="row">
    @foreach (var prod in Model)
    {
        int cantidad = 1;
        byte[] imagenBytes = prod.Imagen;
        string base64 = "data:image/png;base64," + Convert.ToBase64String(imagenBytes);
        <div class="product">
            <img class="imagenProd" src="@base64" alt="@prod.Nombre_Producto">
        </div>
        <div class="product-info">
            <h1 class="nombreProductoSeleccion">@prod.Nombre_Producto</h1>
            <h1 class="PrecioSeleccion">$@prod.Precio</h1>
            <h2 class="lblIVA">Precios incluyen IVA</h2>

            <div id="botoncompra">
                <form class="carritoForm" action="@Url.Action("CrearCarrito", "Producto")" method="post">
                    <input type="hidden" name="id_cliente" value="1" />
                    <input type="hidden" name="id_producto" value="@prod.Id" />
                    <input type="hidden" name="precio" value="@prod.Precio" />
                    <input type="hidden" name="cantidad" value="1" />
                    <input type="hidden" name="subtotal" value="@prod.Precio" />
                    <button id="botoncarrito" type="submit" class="btn btn-large shadow-sm">
                        <i id="carrito" class="bi bi-cart-fill">AÑADIR AL CARRITO</i>
                    </button>
                </form>
            </div>
            <div class="descripcion">
                @switch (prod.Tipo)
                {
                    case "Procesador":
                        <p class="text-white">Marca: @prod.Marca</p>
                        <p class="text-white">Modelo: @prod.Especificaciones.Modelo</p>
                        <p class="text-white">Velocidad: @prod.Especificaciones.Velocidad</p>
                        <p class="text-white">Zócalo: @prod.Especificaciones.Zócalo</p>
                        break;
                    case "Gráfica":
                        <p class="text-white">Marca: @prod.Marca</p>
                        <p class="text-white">Fabricante: @prod.Especificaciones.Fabricante</p>
                        <p class="text-white">Modelo: @prod.Especificaciones.Modelo</p>
                        <p class="text-white">Tamaño VRAM: @prod.Especificaciones.TamañoVRAM</p>
                        <p class="text-white">Velocidad de reloj: @prod.Especificaciones.Velocidad</p>
                        <p class="text-white">Interfaz de salida: @prod.Especificaciones.Interfaz</p>
                        break;
                    case "Almacenamiento":
                        <p class="text-white">Marca: @prod.Marca</p>
                        <p class="text-white">Interfaz: @prod.Especificaciones.Interfaz</p>
                        <p class="text-white">Almacenamiento: @prod.Especificaciones.Almacenamiento</p>
                        break;
                    case "Placa":
                        <p class="text-white">Marca: @prod.Marca</p>
                        <p class="text-white">Modelo: @prod.Especificaciones.Modelo</p>
                        <p class="text-white">Velocidad: @prod.Especificaciones.Velocidad</p>
                        <p class="text-white">Zócalo: @prod.Especificaciones.Zócalo</p>
                        <p class="text-white">Tecnología Ram: @prod.Especificaciones.TecnologíaRAM</p>
                        break;
                    case "Fuente":
                        <p class="text-white">Marca: @prod.Marca</p>
                        break;
                    case "Ram":
                        <p class="text-white">Marca: @prod.Marca</p>
                        <p class="text-white">Modelo: @prod.Especificaciones.Modelo</p>
                        <p class="text-white">Velocidad: @prod.Especificaciones.Velocidad</p>
                        <p class="text-white">Tamaño de memoria: @prod.Especificaciones.Tamañomemoria</p>
                        break;
                }
                <div class="adicional">
                    <h2 class="tituloarticulo">Sobre este artículo</h2>
                    @for (int i = 0; i < prod.Especificaciones.Descripción.Count; i++)
                    {
                        <ul class="text-white">
                            <li>@prod.Especificaciones.Descripción[i]</li>
                        </ul>
                    }
                </div>

            </div>
        </div>

    }
</div>

<div id="alertContainer" class="alert-container"></div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var carritoForm = document.querySelectorAll(".carritoForm");
        carritoForm.forEach(function (form) {
            form.addEventListener("submit", function (e) {
                e.preventDefault();

                var formData = new FormData(form);

                fetch(form.action, {
                    method: "POST",
                    body: formData
                })
                    .then(function (response) {
                        if (response.ok) {
                            // Instead of location.reload(), you can update the view using AJAX
                            updateView();
                        } else {
                            // Handle error if needed
                        }
                    })
                    .catch(function (error) {
                        // Handle network errors or other issues
                    });
            });
        });

        // Function to update the view (you can customize this based on your framework)
        function updateView() {
            var alertContainer = document.getElementById('alertContainer');

            // Crear el elemento de la alerta
            var alertElement = document.createElement('div');
            alertElement.classList.add('alert', 'alert-success', 'fade', 'show', 'product-alert');
            alertElement.innerHTML = 'Producto añadido al carrito';

            // Agregar la alerta al contenedor
            alertContainer.appendChild(alertElement);

            // Desvanecer la alerta después de un tiempo (por ejemplo, 3 segundos)
            setTimeout(function () {
                alertElement.classList.remove('show');

                // Eliminar la alerta del DOM después de la animación de desvanecimiento
                alertElement.addEventListener('transitionend', function () {
                    alertContainer.removeChild(alertElement);
                });
            }, 3000); // 3000 milisegundos = 3 segundos
        }

    });
</script>

